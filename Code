import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn 
import seaborn as sn

football=pd.read_csv('https://andybek.com/pandas-soccer')
football.head(10)
football.info(memory_usage='deep')
football[football.duplicated()]
football=football.drop_duplicates()
f1=football['club'].value_counts(sort=False) ##Teams and there respective players
f1
f1.plot(kind='bar',color='Blue',figsize=(10,8));
f1.plot(kind='bar',color='Blue',figsize=(10,8)).set_xlabel('Clubs');
f1.plot(kind='bar',color='Blue',figsize=(10,8)).set_ylabel('Total number of players');
football.describe()
football.shape ## duplicated removed 
## each club and its most expensive player 
football.loc[:,['name','club','market_value']].groupby('club').max()
def rated(x):
    if x<400:
      return('Relatively Unkown')
    elif x<800:
      return('Kind of Popular')
    elif x<2800:
      return('Popular')
    else:
      return('Super Popular')
football.loc[:,'page_views'].apply(rated)
football.loc[:,'page_views'].apply(rated).value_counts(sort=False).plot(kind='pie',figsize=(4,6)).set_ylabel('Page Views');
football['Popularity']=football.loc[:,'page_views'].apply(rated)
football.head()
##players most famous according to fantasy league too 
football.position.value_counts(sort=False)
## which team has the most defenders
football.loc[:,['position','club']][football.position.isin(['LB','CB','RB'])].groupby('club').count().sort_values(by='position',ascending=False)
##players with market value and fpl value 2* of its mean fall under which category of popularity,if new player then also show 
v=football.loc[:,'market_value'] > 2*football.loc[:,'market_value'].mean()
o=football.loc[:,'fpl_value'] > 2*football.loc[:,'fpl_value'].mean()
football[v & o | football.loc[:,'new_signing']==1].sort_values('Popularity')
football.region.value_counts(sort=False)
## see which region is doing most in terms of market value and fpl points
football.loc[:,['club','market_value','fpl_points','region']].groupby('region').mean(numeric_only=True)
f2=football.loc[:,['club','market_value','fpl_points','region']].groupby('region').mean(numeric_only=True)
f2.plot(kind='pie',subplots=True,figsize=(10,8));
##what percentage of players are English in the league
len(football.nationality[football.nationality == 'England'])/len(football.nationality[football.nationality != 'England'])*100
##multiindex use too 
football.nlargest(1,columns='age')
football.head(14)
football[['name','market_value']].nlargest(1,'market_value')
l=football.loc[:,'fpl_sel'].replace('%','',regex=True).astype(float)
y=football.loc[:,'market_value'] > football.loc[:,'market_value'].mean() 
football['fpl_sel']=l
l.mean()
football[y & (l>5)].sort_values(['market_value'],ascending=[False]) ## these are the players who are playing better since coming from there last team 
football.loc[:,['market_value','fpl_value']].transform(lambda x:x*0.91)
football.head()
football.loc[:,['club','name','market_value']][football.position.isin(['GK'])].nlargest(2,'market_value')
